#!/usr/bin/perl
use strict;
use warnings;
use File::Basename qw(basename);

my $ROOM_KEY = "dailystandup";
my $NAME_KEY = "name";

my $SECRETS_FILE = "$ENV{HOME}/.secrets";
my $SECRETS_APP = "jitsi";
my @CONFIG_KEYS = ($ROOM_KEY, $NAME_KEY);
my @REQUIRED_KEYS = ($ROOM_KEY);

my @BROWSER_CMD = ("google-chrome", "--simulate-outdated-no-au=Tue, 31 Dec 2099 23:59:59 GMT");

my $MODE_LAUNCH = "launch";
my $MODE_URL = "url";
my $MODE_ROOM = "room";
my $MODE_USERNAME = "username";

my $EXEC = basename $0;

my $USAGE = "Usage:
  $EXEC -h | --help
    show this message

  $EXEC [OPTS]
    open room name at jitsi.$ROOM_KEY in secrets

  $EXEC [OPTS] --url
    print the URL for the room at jitsi.$ROOM_KEY in secrets

  $EXEC [OPTS] --print-room | --get
    print room name at jitsi.$ROOM_KEY in secrets

  $EXEC [OPTS] --name
    print name at jitsi.$NAME_KEY in secrets

  OPTS
    --room=ROOM_NAME
      use ROOM_NAME instead of room name in secrets
";

sub main(@){
  my $mode = $MODE_LAUNCH;
  my $roomOverride = undef;
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $USAGE;
      exit 0;
    }elsif($arg =~ /^(--url)$/){
      $mode = $MODE_URL;
    }elsif($arg =~ /^(--print-room|--get)$/){
      $mode = $MODE_ROOM;
    }elsif($arg =~ /^(--name)$/){
      $mode = $MODE_USERNAME;
    }elsif($arg =~ /^--room=(.+)$/){
      $roomOverride = $1;
    }else{
      die "$USAGE\nERROR: unknown arg $arg\n";
    }
  }

  my $secrets = readSecrets();
  my $room = $$secrets{$ROOM_KEY};
  $room = $roomOverride if defined $roomOverride;
  my $username = $$secrets{$NAME_KEY};

  if($mode eq $MODE_LAUNCH){
    exec @BROWSER_CMD, "https://meet.jit.si/$room#config.startWithVideoMuted=true";
  }elsif($mode eq $MODE_URL){
    print "https://meet.jit.si/$room#config.startWithVideoMuted=true\n";
  }elsif($mode eq $MODE_ROOM){
    print "$room\n";
  }elsif($mode eq $MODE_USERNAME){
    print "$username\n";
  }else{
    die "ERROR: unknown mode $mode\n";
  }
}

sub readSecrets(){
  my @lines = `cat $SECRETS_FILE 2>/dev/null`;
  my $cfg = {};
  my $okConfigKeys = join "|", @CONFIG_KEYS;
  for my $line(@lines){
    if($line =~ /^$SECRETS_APP\.($okConfigKeys)\s*=\s*(.+)$/){
      $$cfg{$1} = $2;
    }
  }
  for my $key(sort @REQUIRED_KEYS){
    die "Missing config '$key' in $SECRETS_FILE\n" if not defined $$cfg{$key};
  }
  return $cfg;
}

&main(@ARGV);
