#!/usr/bin/perl
use strict;
use warnings;
use File::Basename qw(basename);

my $SECRETS_FILE = "$ENV{HOME}/.secrets";

my $APP_JITSI = "jitsi";

my $ROOM_KEY = "dailystandup";
my $USERNAME_KEY = "name";

my @SECRETS_CONFIG_KEYS = ($ROOM_KEY, $USERNAME_KEY);
my @SECRETS_REQUIRED_KEYS = ($ROOM_KEY);

my @BROWSER_CMD_FF = ("firefox");
my @BROWSER_CMD_CHROME = ("google-chrome",
  "--simulate-outdated-no-au=Tue, 31 Dec 2099 23:59:59 GMT");
my @BROWSER_CMD_CHROMIUM = ("chromium");

my $URL_PATTERN_JITSI = "https://meet.jit.si/<ROOM>#config.startWithVideoMuted=true";

my $MODE_LAUNCH = "launch";
my $MODE_URL = "url";
my $MODE_ROOM = "room";
my $MODE_USERNAME = "username";

my $EXEC = basename $0;

my $USAGE = "Usage:
  $EXEC -h | --help
    show this message

  $EXEC [OPTS]
    -read ROOM_NAME from secrets
      $APP_JITSI.$ROOM_KEY
    -generate the URL
    -open URL in BROWSER (or print the URL or ROOM_NAME)

  $EXEC [OPTS] --name
    -same as: $EXEC --username

  OPTS
    --launch
      open the URL in browser
      (this is the default)
    --print-url | --url
      print the URL instead of launching browser
    --print-room | --get
      print the ROOM_NAME instead of launching browser
    --print-name | --username
      read USER_NAME from secrets
        $APP_JITSI.$USERNAME_KEY
      print USER_NAME instead of launching browser

    --firefox | --ff
      use BROWSER=@BROWSER_CMD_FF
    --chrome
      use BROWSER=@BROWSER_CMD_CHROME
    --chromium
      use BROWSER=@BROWSER_CMD_CHROMIUM
      (this is the default)

    --room=ROOM_NAME
      use ROOM_NAME instead of room name in secrets
";

sub main(@){
  my $mode = $MODE_LAUNCH;
  my @browserCmd = @BROWSER_CMD_CHROMIUM;
  my $roomOverride = undef;
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $USAGE;
      exit 0;
    }elsif($arg =~ /^(--launch)$/){
      $mode = $MODE_LAUNCH;
    }elsif($arg =~ /^(--print-url|--url)$/){
      $mode = $MODE_URL;
    }elsif($arg =~ /^(--print-room|--get)$/){
      $mode = $MODE_ROOM;
    }elsif($arg =~ /^(--print-name|--username)$/){
      $mode = $MODE_USERNAME;
    }elsif($arg =~ /^(--name)$/){
      $mode = $MODE_USERNAME;
    }elsif($arg =~ /^(--firefox|--ff)$/){
      @browserCmd = @BROWSER_CMD_FF;
    }elsif($arg =~ /^(--chrome)$/){
      @browserCmd = @BROWSER_CMD_CHROME;
    }elsif($arg =~ /^(--chromium)$/){
      @browserCmd = @BROWSER_CMD_CHROMIUM;
    }elsif($arg =~ /^--room=(.+)$/){
      $roomOverride = $1;
    }else{
      die "$USAGE\nERROR: unknown arg $arg\n";
    }
  }

  my $secrets = readSecrets();
  my $room = $$secrets{$ROOM_KEY};
  $room = $roomOverride if defined $roomOverride;
  my $username = $$secrets{$USERNAME_KEY};

  my $url = $URL_PATTERN_JITSI;
  $url =~ s/<ROOM>/$room/g;

  if($mode eq $MODE_LAUNCH){
    exec @browserCmd, $url;
  }elsif($mode eq $MODE_URL){
    print "$url\n";
  }elsif($mode eq $MODE_ROOM){
    print "$room\n";
  }elsif($mode eq $MODE_USERNAME){
    print "$username\n";
  }else{
    die "ERROR: unknown mode $mode\n";
  }
}

sub readSecrets(){
  my @lines = `cat $SECRETS_FILE 2>/dev/null`;
  my $cfg = {};
  my $okConfigKeys = join "|", @SECRETS_CONFIG_KEYS;
  for my $line(@lines){
    if($line =~ /^$APP_JITSI\.($okConfigKeys)\s*=\s*(.+)$/){
      $$cfg{$1} = $2;
    }
  }
  for my $key(sort @SECRETS_REQUIRED_KEYS){
    die "Missing config '$APP_JITSI.$key' in $SECRETS_FILE\n" if not defined $$cfg{$key};
  }
  return $cfg;
}

&main(@ARGV);
