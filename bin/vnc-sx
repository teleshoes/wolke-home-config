#!/usr/bin/perl
use strict;
use warnings;
use Time::HiRes qw(sleep);

my $IPMAGIC_NAME = "sx";

my $PHONE_GRAPHICS_MODES_FILE_GLOB = "/sys/class/graphics/fb*/modes";
my $LIPSTICK2VNC_CONF_FILE = "/var/lib/environment/nemo/70-lipstick2vnc.conf";
my $SLEEP_DELAY_MILLIS = 300;
my $VNC_VIEWER_EXEC = "xtigervncviewer";

sub calculateScale();

my $usage = "Usage:
  vnc to phone using $VNC_VIEWER_EXEC and lipstick2vnc, scaling the viewport

  $0 -h|--help
    show this message

  $0 [OPTS]
    -obtain phone resolution:
      use ipmagic to run `cat $PHONE_GRAPHICS_MODES_FILE_GLOB`
    -obtain monitor resoltion:
      run `res -h`
    -calculate a scale based on the height, targeting 95% of the monitor height
    -round down to the nearest 10% (max of 100% and min of 10%)
    -put --allow-all and -s with scale as a ratio in LIPSTICK2VNC_OPTS
    -write LIPSTICK2VNC_OPTS to $LIPSTICK2VNC_CONF_FILE
    -unlock phone screen
    -start lipstick2vnc
    -sleep for $SLEEP_DELAY_MILLIS millis
    -run $VNC_VIEWER_EXEC
    -stop lipstick2vnc after vnc viewer exits

  OPTS
";

sub main(@){
  while(@_ > 0){
    my $arg = shift;
    if($arg =~ /^(-h|--help)$/){
      print $usage;
      exit 0;
    }else{
      die "$usage\nERROR: unknown arg \"$arg\"\n";
    }
  }

  my $scale = calculateScale();
  print "SCALE: $scale\n";

  system "ipmagic", $IPMAGIC_NAME, "-u", "root", "-s", "
    echo \"LIPSTICK2VNC_OPTS=\\\"--allow-all -s $scale\\\"\" > $LIPSTICK2VNC_CONF_FILE
    lock --unlock &
    systemctl start vnc
  ";
  my $host = `ipmagic $IPMAGIC_NAME`;
  chomp $host;

  sleep ($SLEEP_DELAY_MILLIS/1000.0);
  system $VNC_VIEWER_EXEC, $host;
  system "ipmagic", $IPMAGIC_NAME, "-u", "root", "-s", "systemctl stop vnc";
}

sub calculateScale(){
  my $phoneHeight = "";
  my $phoneResOut = `ipmagic $IPMAGIC_NAME -s "cat $PHONE_GRAPHICS_MODES_FILE_GLOB"`;
  if($phoneResOut =~ /(\d+)x(\d+)p/){
    my ($w, $h)= ($1, $2);
    $phoneHeight = $w > $h? $w : $h;
  }
  if($phoneHeight !~ /^\d+$/){
    die "ERROR: could not obtain phone resolution\n";
  }

  my $monitorHeight = `res -h`;
  chomp $monitorHeight;
  if($monitorHeight !~ /^\d+$/){
    die "ERROR: could not obtain monitor resolution\n";
  }

  my $desiredViewportHeight = $monitorHeight*0.95;

  #scale is in increments of 10%, between 10% and 100%
  my $scale = sprintf "%.1f", int(10*($desiredViewportHeight)/$phoneHeight)/10.0;
  $scale = "1.0" if $scale >= 1;
  $scale = "0.1" if $scale <= 0.1;

  return $scale;
}

&main(@ARGV);
