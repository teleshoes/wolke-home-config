#!/usr/bin/perl
use strict;
use warnings;

my $usage = "Usage:
  $0 -h|--help
    show this message

  $0 APP_SHORT_NAME APK_FILE
    rename APK_FILE using aapt badging info

    new file format is:
    <APP_SHORT_NAME>_<APP_NAME>_<APP_VERSION_NAME>.apk
    e.g.: chrome_com.android.chrome_67.0.3396.87.apk

  $0 APK_FILE [APK_FILE APK_FILE ..]
    for each APK_FILE:
      -ensure APK_FILE starts with a letter, followed by at least 3 letters/numbers
      -use this group of letters and numbers as APP_SHORT_NAME
      -same as: $0 APP_SHORT_NAME APK_FILE
";

sub renameApk($$);

sub main(@){
  if(@_ == 1 and $_[0] =~ /^(-h|--help)$/){
    print $usage;
    exit 0;
  }elsif(@_ == 2 and not -f $_[0] and -f $_[1]){
    my ($appShortName, $apkFile) = @_;
    if($appShortName !~ /^[a-zA-Z0-9]+$/){
      die "$usage\nERROR: APP_SHORT_NAME can only contain letters or numbers\n"
    }
    if(not -f $apkFile or $apkFile !~ /\.apk/i){
      die "$usage\nERROR: $apkFile must exist and end in .apk\n";
    }

    renameApk $appShortName, $apkFile;
  }elsif(@_ >= 1){
    for my $apkFile(@_){
      die "ERROR: $apkFile is not a file\n" if not -f $apkFile;
      my $fileName = $apkFile;
      $fileName =~ s/^.*\///;
      if($fileName !~ /^([a-zA-Z][a-zA-Z0-9]{2,}).*\.apk$/i){
        die "ERROR: could not extract app short name from $apkFile\n";
      }
      my $appShortName = $1;

      renameApk $appShortName, $apkFile;
    }
  }
}

sub renameApk($$){
  my ($appShortName, $apkFile) = @_;
  my @aaptLines = `aapt dump badging "$apkFile"`;
  my %info;
  for my $line(@aaptLines){
    $info{name} = $1    if $line =~ /^package:.*\sname=['"]([^'"]+)['"]/;
    $info{version} = $1 if $line =~ /^package:.*\sversionName=['"]([^'"]+)['"]/;
  }

  die "ERROR: could not find app name with aapt\n" if not defined $info{name};
  die "ERROR: could not find app version with aapt\n" if not defined $info{version};

  if($info{name} !~ /^[a-zA-Z0-9_\-\.]+$/){
    die "ERROR: app name can container only letters/numbers/underscores/hyphens/periods\n";
  }

  $info{version} =~ s/[^a-zA-Z0-9_\-\.]+/_/g;
  $info{version} =~ s/^_+//g;
  $info{version} =~ s/_+$//g;

  my $newApkFileName = "${appShortName}_$info{name}_$info{version}.apk";

  my $newApkFile = $apkFile;
  if($newApkFile !~ s/(^|.*\/)([^\/]+\.apk)$/$1$newApkFileName/i){
    die "ERROR: could not generate new apk file path\n";
  }

  if($apkFile eq $newApkFile){
    print "apk file already named $newApkFile\n";
    return;
  }

  if(-e $newApkFile){
    die "ERROR: $newApkFile already exists\n";
  }

  my @cmd = ("mv", $apkFile, $newApkFile);
  print "@cmd\n";
  system @cmd;
  die "ERROR: error running @cmd\n" if $? != 0;
}

&main(@ARGV);
