#!/usr/bin/perl
use strict;
use warnings;

my $usage = "Usage:
  $0 -h|--help
    print this message

  $0 [OPTS] [FILE FILE ..]
    print file modification time in seconds since epoch UTC, one per line
    if more than one file is specified, prefix each line with 'FILE',
      followed by whitespace to align the mtime

  OPTS
    -f
      format mtime YYYY-mm-dd_HH_MM_SS in local time
    -m | --ms | --millis | --milliseconds
      use milliseconds from Time::HiRes->stat
      if -f, use format: HH_MM_SS.FFF
    -p | --prefix
      always prefix line with 'FILE' and whitespace
    -n | --no-prefix
      never prefix line with 'FILE' and whitespace
";

sub main(@){
  my $format = 0;
  my $useMillis = 0;
  my $alwaysPrefix = 0;
  my $neverPrefix = 0;
  my @files;
  while(@_ > 0){
    my $arg = shift;
    if($arg =~ /^(-h|--help)$/){
      print $usage;
      exit 0;
    }elsif($arg =~ /^(-f)$/){
      $format = 1;
    }elsif($arg =~ /^(-m|--ms|--millis|--milliseconds)$/){
      $useMillis = 1;
    }elsif($arg =~ /^(-p|--prefix)$/){
      $alwaysPrefix = 1;
    }elsif($arg =~ /^(-n|--no-prefix)$/){
      $neverPrefix = 1;
    }elsif(-e $arg){
      push @files, $arg;
    }else{
      die "$usage\nERROR: unknown arg $arg\n";
    }
  }

  my $maxFileLen = 0;
  for my $file(@files){
    my $len = length $file;
    $maxFileLen = $len if $len > $maxFileLen;
  }

  my $usePrefix;
  if($alwaysPrefix){
    $usePrefix = 1;
  }elsif($neverPrefix){
    $usePrefix = 0;
  }elsif(@files > 1){
    $usePrefix = 1;
  }else{
    $usePrefix = 0;
  }

  for my $file(@files){
    my @stat;
    if($useMillis){
      require Time::HiRes;
      @stat = Time::HiRes::stat $file;
    }else{
      @stat = stat $file;
    }

    my $mtime = $stat[9];
    my $mtimeFmt;
    if($format){
      $mtimeFmt = `date --date \@$mtime +%Y-%m-%d_%H-%M-%S`;
      chomp $mtimeFmt;
      if($useMillis){
        my $fracS = $mtime - int($mtime);
        $mtimeFmt .= sprintf ".%03d", $fracS * 1000.0;
      }
    }elsif($useMillis){
      $mtimeFmt = int($mtime * 1000.0);
    }else{
      $mtimeFmt = int($mtime);
    }

    if($usePrefix){
      my $len = $maxFileLen + 2;
      printf "\%-${len}s \%s\n", $file, $mtimeFmt;
    }else{
      print "$mtimeFmt\n";
    }
  }
}

&main(@ARGV);
