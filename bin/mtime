#!/usr/bin/perl
use strict;
use warnings;

my $usage = "Usage:
  $0 -h|--help
    print this message

  $0 [OPTS] [FILE FILE ..]
    print file modification time in seconds since epoch UTC, one per line
    if more than one file is specified, prefix each line with 'FILE',
      followed by whitespace (one or more ' ' chars, to align the mtime)

  OPTS
    -f
      format mtime YYYY-mm-dd_HH_MM_SS in local time
    -m | --ms | --millis | --milliseconds
      use milliseconds from Time::HiRes->stat
      if -f, use format: HH_MM_SS.FFF

    --file | -p | --prefix
      always include 'FILE' in output
    --no-file | -n | --no-prefix
      never include 'FILE' in output
    --file-multi
      only include 'FILE' in output if more than one file is given
      (this is the default)
";

my $FILE_MODE_ALWAYS = 'always';
my $FILE_MODE_NEVER = 'never';
my $FILE_MODE_MULTI = 'multi';

sub main(@){
  my $format = 0;
  my $useMillis = 0;
  my $fileMode = $FILE_MODE_MULTI;
  my @files;
  while(@_ > 0){
    my $arg = shift;
    if($arg =~ /^(-h|--help)$/){
      print $usage;
      exit 0;
    }elsif($arg =~ /^(-f)$/){
      $format = 1;
    }elsif($arg =~ /^(-m|--ms|--millis|--milliseconds)$/){
      $useMillis = 1;
    }elsif($arg =~ /^(--file|-p|--prefix)$/){
      $fileMode = $FILE_MODE_ALWAYS;
    }elsif($arg =~ /^(--no-file|-n|--no-prefix)$/){
      $fileMode = $FILE_MODE_NEVER;
    }elsif($arg =~ /^(--file-multi)$/){
      $fileMode = $FILE_MODE_MULTI;
    }elsif(-l $arg or -e $arg){
      push @files, $arg;
    }else{
      die "$usage\nERROR: unknown arg $arg\n";
    }
  }

  my $maxFileLen = 0;
  for my $file(@files){
    my $len = length $file;
    $maxFileLen = $len if $len > $maxFileLen;
  }

  my $displayFile = 0;
  $displayFile = @files > 1 ? 1 : 0 if $fileMode eq $FILE_MODE_MULTI;
  $displayFile = 1 if $fileMode eq $FILE_MODE_ALWAYS;
  $displayFile = 0 if $fileMode eq $FILE_MODE_NEVER;

  for my $file(@files){
    my @stat;
    if($useMillis){
      require Time::HiRes;
      @stat = Time::HiRes::lstat $file;
    }else{
      @stat = lstat $file;
    }

    my $mtime = $stat[9];
    my $mtimeFmt;
    if($format){
      $mtimeFmt = `date --date \@$mtime +%Y-%m-%d_%H-%M-%S`;
      chomp $mtimeFmt;
      if($useMillis){
        my $fracS = $mtime - int($mtime);
        $mtimeFmt .= sprintf ".%03d", $fracS * 1000.0;
      }
    }elsif($useMillis){
      $mtimeFmt = int($mtime * 1000.0);
    }else{
      $mtimeFmt = int($mtime);
    }

    if($displayFile){
      my $len = $maxFileLen + 2;
      printf "\%-${len}s \%s\n", $file, $mtimeFmt;
    }else{
      print "$mtimeFmt\n";
    }
  }
}

&main(@ARGV);
