#!/usr/bin/perl
use strict;
use warnings;
use File::Basename qw(basename);
use Cwd qw(abs_path);

my $EXEC = basename $0;

my @EXTS = qw(png jpg jpeg);
my $OK_EXTS = join "|", @EXTS;

my $FLASH_DURATION_MILLIS = 500;

my $usage = "Usage:
  use scrot-bag to take a screenshot and store it in a directory,
  not overwriting existing screenshots

  $EXEC -h | --help
    show this message

  $EXEC [OPTS] DIR
    run: `scrot <DIR>/<DATE>_<TIME>_<NEXTNUM>.png`
      DIR
        directory passed in; must already exist
        converted to an absolute path by Cwd::abs_path
      DATE
        current date, formatted +%Y%m%d
        e.g.: 20201111
      TIME
        current time, formatted +%H%M%S
        e.g.: 193743
      NEXTNUM
        find all files in DIR named: <DATE>*_<NUM>.<EXT>
        extract the largest NUM, and add 1 to it
        formatted as at least 3 digits with leading 0s i.e.: %03d
        e.g.: 001
      NUM
        any sequence of digits (non-negative integer)
      EXT
        one of: $OK_EXTS

  $EXEC [OPTS]
    same as `$EXEC OPTS \$HOME`

  OPTS
    --flash
      after running `scrot <DIR>/<YYYYMMDD>_<NEXTNUM>.png`,
      run: `image-flash --timeout-millis=$FLASH_DURATION_MILLIS <DIR>/<YYYYMMDD>_<NEXTNUM>.png`

    --min=MIN_NEXTNUM
      use <MIN_NEXTNUM> instead of <NEXTNUM>, if <MIN_NEXTNUM> is larger than <NEXTNUM>
      (default is 1)
";

sub main(@){
  my $dir = undef;
  my $flash = 0;
  my $minNextNum = 1;
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $usage;
      exit 0;
    }elsif(-d $arg){
      die "ERROR: multiple dirs given \"$arg\" and \"$dir\"\n" if defined $dir;
      $dir = $arg;
    }elsif($arg =~ /^(--flash)$/){
      $flash = 1;
    }elsif($arg =~ /^--min=(\d+)$/){
      $minNextNum = $1;
    }else{
      die "$usage\nERROR: unknown arg $arg\n";
    }
  }

  $dir = $ENV{HOME} if not defined $dir;

  $dir = abs_path($dir);

  $dir =~ s/\/+$//;

  if(not -d $dir){
    die "ERROR: $dir is not a dir\n";
  }

  my $date = `date +%Y%m%d`;
  chomp $date;
  my $time = `date +%H%M%S`;
  chomp $time;

  my @files = listDirFiles($dir);
  my $maxNum = 0;
  for my $file(@files){
    if($file =~ /^(?:.*\/)?${date}.*_(\d+)\.(?:$OK_EXTS)$/i){
      my $num = 0 + $1;
      if($num > $maxNum){
        $maxNum = $num;
      }
    }
  }

  my $nextNum;
  $nextNum = $maxNum + 1;
  $nextNum = $minNextNum if $nextNum < $minNextNum;
  $nextNum = sprintf "%03d", $nextNum;

  my $file = "${dir}/${date}_${time}_${nextNum}.png";

  if(-e $file){
    die "ERROR: $file already exists\n";
  }

  print "Taking screenshot and putting it in $file\n";
  system "scrot", $file;

  if($flash){
    system "image-flash", "--timeout-millis=$FLASH_DURATION_MILLIS", $file;
  }
}

sub listDirFiles($){
  my ($dir) = @_;
  opendir(my $dh, $dir) or die "ERROR: could not read dir $dir\n$!\n";
  my @files = readdir($dh);
  closedir($dh);
  $dir =~ s/\/?$//;
  @files = map {"$dir/$_"} @files;
  @files = grep {-f $_} @files;
  return @files;
}

&main(@ARGV);
