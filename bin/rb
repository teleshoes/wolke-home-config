#!/usr/bin/perl
use strict;
use warnings;

sub isRhythmboxRunning();

my @CMD_KLOMP_PI_DISPLAY = qw(klomp-pi-display --rhythmbox --ensure --no-restart);
my @CMD_RB_CLIENT = qw(rhythmbox-client --no-start);

my $USAGE = "Usage:
  $0 -h | --help
    show this message

  $0
  $0 -p | p
  $0 --play | play
    run: @CMD_RB_CLIENT --play-pause

  $0 --pause | pause
  $0 --stop | stop
    run: @CMD_RB_CLIENT --pause

  $0 -n | n
  $0 --next | next
  $0 --skip | skip
    run: @CMD_RB_CLIENT --next

  $0 --prev | prev
  $0 --previous | previous
    run: @CMD_RB_CLIENT --previous
";

sub main(@){
  my $clientCmd = "--play-pause";
  while(@_ > 0){
    my $arg = shift @_;
    if($arg =~ /^(-h|--help)$/){
      print $USAGE;
      exit 0;
    }elsif($arg =~ /^(-p|p|--play|play)$/){
      $clientCmd = "--play-pause";
    }elsif($arg =~ /^(--pause|pause|--stop|stop)$/){
      $clientCmd = "--pause";
    }elsif($arg =~ /^(-n|n|--next|next|--skip|skip)$/){
      $clientCmd = "--next";
    }elsif($arg =~ /^(--prev|prev|--previous|previous)$/){
      $clientCmd = "--previous";
    }else{
      die "$USAGE\nERROR: unknown arg $arg\n";
    }
  }

  my @cmd = (@CMD_RB_CLIENT, $clientCmd);
  print "@cmd\n";
  exec @cmd;
}

sub isRhythmboxRunning(){
  system "pkill", "-0", "-x", "rhythmbox";
  return ($? == 0) ? 1 : 0;
}

&main(@ARGV);
