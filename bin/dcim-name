#!/usr/bin/perl
use strict;
use warnings;
use File::Basename qw(basename);

my $MAX_NAME_LEN = 89; #prefix is 11 chars, so filepath is 100 chars

my $EXEC = basename $0;

my $USAGE = "Usage:
  $EXEC -h | --help
    print this message

  $EXEC DIR NAME
    rename <DIR> to <YYYY-MM-DD>_<NAME>
    where <YYYY-MM-DD> is the mtime of the oldest file in the dir

    if <NAME> starts with \"<YYYY-MM-DD>_\", the prefix is removed
      (prevents double-prefixing)

    set the newly renamed dir's mtime to the oldest file in the dir

  $EXEC --rename-only DIR NAME
    do not set mtimes, only rename as above

  $EXEC --touch-only DIR [DIR DIR ..]
    do not rename the indicated <DIR>s, only set mtimes as above
";

my $MODE_RENAME_TOUCH = "rename-and-touch";
my $MODE_RENAME_ONLY = "rename-only";
my $MODE_TOUCH_ONLY = "touch-only";

sub nameDir($$$);
sub formatDateYYYYMMDD($);
sub formatTimeHHMMSS($);
sub getOldestFile(@);
sub mtime($);
sub run(@);
sub pad2($);

sub main(@){
  if(@_ == 1 and $_[0] =~ /^(-h|--help)$/){
    print $USAGE;
    exit 0;
  }elsif(@_ == 2 and -d $_[0]){
    my ($dir, $name) = @_;
    $dir =~ s/\/$//;

    nameDir $MODE_RENAME_TOUCH, $dir, $name;
  }elsif(@_ == 3 and $_[0] =~ /^(--rename-only)/ and -d $_[1]){
    my ($cmd, $dir, $name) = @_;
    $dir =~ s/\/$//;

    nameDir $MODE_RENAME_ONLY, $dir, $name;
  }elsif(@_ >= 2 and $_[0] =~ /^(--touch-only)$/){
    my ($cmd, @dirs) = @_;
    for my $dir(@dirs){
      $dir =~ s/\/$//;
      nameDir $MODE_TOUCH_ONLY, $dir, $dir;
    }
  }else{
    die $USAGE;
  }

}

sub nameDir($$$){
  my ($mode, $dir, $name) = @_;
  $dir =~ s/^\.\///;
  die "dir must be in the current directory\n" if $dir =~ /\//;

  print "\n\n#$mode: $dir\n";

  my @files = `find $dir/ -type f`;
  die "no files found: $dir\n" if @files == 0;
  my ($minMtime, $minFile) = getOldestFile @files;

  my $date = formatDateYYYYMMDD $minMtime;
  my $time = formatTimeHHMMSS $minMtime;

  if($name =~ s/^${date}_//){
    if($mode =~ /^($MODE_RENAME_TOUCH|$MODE_RENAME_ONLY)$/){
      print "\n\n#WARNING: removing date prefix '$date'"
        . " (same as date prefix to be appended)\n\n";
    }
  }

  my $len = length $name;
  die "max chars exceeded ($len > $MAX_NAME_LEN) '$name'\n" if $len > $MAX_NAME_LEN;

  my $newDir = "${date}_${name}";

  print "#earliest file is $date $time\n";

  if($mode =~ /^($MODE_RENAME_TOUCH|$MODE_TOUCH_ONLY)$/){
    my $oldMtime = mtime $dir;
    my $newMtime = mtime $minFile;
    if($oldMtime != $newMtime){
      print "#mtime $oldMtime => $newMtime\n";
      run 'touch', '-r', $minFile, $dir;
    }else{
      print "#mtime unchanged!\n";
    }
  }else{
    print "#skipping touch\n";
  }

  if($mode =~ /^($MODE_RENAME_TOUCH|$MODE_RENAME_ONLY)$/){
    if($dir ne $newDir){
      run 'mv', $dir, $newDir;
    }else{
      print "#dir name unchanged!\n";
    }
  }else{
    if($dir ne $newDir){
      die "ERROR: rename forbidden and new name does not match old ($dir => $newDir)\n";
    }
  }
}

sub formatDateYYYYMMDD($){
  my ($timeEpochSex) = @_;

  my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
    localtime($timeEpochSex);
  $year += 1900;
  $mon += 1;
  $mon = pad2 $mon;
  $mday = pad2 $mday;

  $hour = pad2 $hour;
  $min = pad2 $min;
  $sec = pad2 $sec;
  my $date = "${year}-${mon}-${mday}";
}
sub formatTimeHHMMSS($){
  my ($timeEpochSex) = @_;

  my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
    localtime($timeEpochSex);
  $hour = pad2 $hour;
  $min = pad2 $min;
  $sec = pad2 $sec;

  return "$hour:$min:$sec";
}

sub getOldestFile(@){
  my @files = @_;

  my $minMtime = -1;
  my $minFile;
  for my $file(sort @files){
    chomp $file;
    my $mtime = mtime $file;
    if($minMtime < 0 or $mtime < $minMtime){
      $minMtime = $mtime;
      $minFile = $file;
    }
  }
  die "couldnt find earliest file\n" if $minMtime < 0 or not -f $minFile;
  return ($minMtime, $minFile);
}

sub mtime($){
  my ($file) = @_;
  my @stat = stat $file;
  my $mtime = $stat[9];
  return $mtime;
}

sub run(@){
  print "@_\n";
  system @_;
}

sub pad2($){
  return $_[0] < 10 ? "0$_[0]" : $_[0];
}

&main(@ARGV);
