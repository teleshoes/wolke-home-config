#!/usr/bin/perl
use strict;
use warnings;

my @suffixes = qw(-siduction -amd64);
my $okSuffixes = join "|", @suffixes;
my $suffix = join "", @suffixes;

my $ACPI_CALL_REPO_URL = "https://github.com/teleshoes/acpi_call.git";
my $THINKPAD_ACPI_REPO_URL = "https://github.com/teleshoes/thinkpad_acpi.git";

sub gitClone($$);
sub cd($);
sub run(@);

sub main(@){
  die "Usage: $0 kernel-version\n" if @_ != 1;
  my $v = shift;
  $v =~ s/^(linux|headers|image|-)+//g;
  while($v =~ /$okSuffixes$/){
    $v =~ s/$okSuffixes$//;
  }
  run "sudo", "apt-get", "install",
    "linux-headers-$v$suffix",
    "linux-image-$v$suffix",
  ;

  print "\n\n\ninstalling acpi_call\n";
  my $acpiCallRepoDir = "$ENV{HOME}/.src-cache/acpi_call";
  gitClone $ACPI_CALL_REPO_URL, $acpiCallRepoDir;
  cd $acpiCallRepoDir;
  run "make", "clean";
  run "make", "KVER=$v$suffix";
  run "sudo", "make", "install", "KVER=$v$suffix";

  print "\n\n\ninstalling thinkpad_acpi\n";
  my $thinkpadACPIRepoDir = "$ENV{HOME}/.src-cache/thinkpad_acpi";
  gitClone $THINKPAD_ACPI_REPO_URL, $thinkpadACPIRepoDir;
  cd $thinkpadACPIRepoDir;
  run "./install.pl", "$v$suffix";
}

sub gitClone($$){
  my ($repoURL, $repoDir) = @_;
  if(not -d $repoDir){
    run "mkdir", "-p", $repoDir;
    run "git", "clone", $repoURL, $repoDir;
  }else{
    run "cd \"$repoDir\" && git fetch && git rebase";
  }
}

sub cd($){
  my $targetDir = $_[0];
  chdir $targetDir;
  $ENV{PWD} = $targetDir;
  my $dir = `pwd`;
  chomp $dir;
  die "PWD does not match expected dir after chdir\n" if $dir ne $targetDir;
}

sub run(@){
  system @_;
  die "Error: @_\n" if $? != 0;
}

&main(@ARGV);
