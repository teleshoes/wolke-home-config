#!/usr/bin/python3
import aiohttp
import asyncio
import logging
import os
import sys
from configfile import (USERNAME, PASSWORD, REGION, MAC)

### suppress slimxpp warning:
###   Using slower stringprep, consider compiling the faster cython/libidn one.
from contextlib import redirect_stderr, suppress
with redirect_stderr(None), suppress(ModuleNotFoundError):
  import slixmpp
###

from gehomesdk import (
    EVENT_APPLIANCE_INITIAL_UPDATE,
    ErdAcOperationMode,
    ErdAcFanSetting,
    ErdCode,
    ErdOnOff,
    GeAppliance,
    GeWebsocketClient,
)


async def handle(appliance: GeAppliance):
  if appliance.mac_addr == MAC:
    print(appliance.get_erd_value(ErdCode.AC_POWER_STATUS))
    print(appliance.get_erd_value(ErdCode.AC_OPERATION_MODE))
    print(appliance.get_erd_value(ErdCode.AC_FAN_SETTING))
    print(appliance.get_erd_value(ErdCode.AC_TARGET_TEMPERATURE))

    os._exit(0)

async def main():
  client = GeWebsocketClient(USERNAME, PASSWORD, REGION, asyncio.get_running_loop())
  client.add_event_handler(EVENT_APPLIANCE_INITIAL_UPDATE, handle)

  session = aiohttp.ClientSession()
  await client.async_get_credentials_and_run(session)

if __name__ == "__main__":
  asyncio.get_event_loop().run_until_complete(main())
