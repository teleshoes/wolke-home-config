diff --git a/config.h.in b/config.h.in
index 5fef4be..6d9d0c2 100644
--- a/config.h.in
+++ b/config.h.in
@@ -33,7 +33,7 @@
 /* beginning of configurable stuff ********************************** */
 
 
-#define DEFAULT_JOB_PATH "/usr/bin:/bin" /* Default PATH to use when running jobs*/
+#define DEFAULT_JOB_PATH "/bin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin" /* Default PATH to use when running jobs*/
 
 #define SENDMAIL_ARGS	 "-Ffcron", "-odi"   /* args of mail command */
 
diff --git a/fcrontab.c b/fcrontab.c
index cc57597..228824d 100644
--- a/fcrontab.c
+++ b/fcrontab.c
@@ -176,9 +176,9 @@ xexit(int exit_val)
 #ifdef HAVE_LIBPAM
     /* we need those rights for pam to close properly */
     if (geteuid() != fcrontab_uid && seteuid(fcrontab_uid) != 0)
-        die_e("could not change euid to %d", fcrontab_uid);
+        error_e("could not change euid to %d", fcrontab_uid);
     if (getegid() != fcrontab_gid && setegid(fcrontab_gid) != 0)
-        die_e("could not change egid to %d", fcrontab_gid);
+        error_e("could not change egid to %d", fcrontab_gid);
     pam_setcred(pamh, PAM_DELETE_CRED | PAM_SILENT);
     pam_end(pamh, pam_close_session(pamh, PAM_SILENT));
 #endif
diff --git a/fcrondyn_svr.c b/fcrondyn_svr.c
index b27eae3..ae9ce9a 100644
--- a/fcrondyn_svr.c
+++ b/fcrondyn_svr.c
@@ -234,8 +234,8 @@ auth_client_getpeer(struct fcrondyn_cl *client)
     /* Successfully identified user: */
     client->fcl_user = strdup2(p_entry->pw_name);
 
-    explain("Client's uid=%d, gid=%d username=%s", euid, egid,
-            client->fcl_user);
+    //explain("Client's uid=%d, gid=%d username=%s", euid, egid,
+    //        client->fcl_user);
 
 }
 #endif                          /* HAVE_GETPEEREID */
@@ -284,8 +284,8 @@ auth_client_so_peercred(struct fcrondyn_cl *client)
     /* Successfully identified user: */
     client->fcl_user = strdup2(p_entry->pw_name);
 
-    explain("Client's pid=%d, uid=%d, gid=%d username=%s", cred.pid, cred.uid,
-            cred.gid, client->fcl_user);
+    //explain("Client's pid=%d, uid=%d, gid=%d username=%s", cred.pid, cred.uid,
+    //        cred.gid, client->fcl_user);
 
 }
 #endif                          /* SO_PEERCRED */
@@ -455,9 +455,10 @@ print_line(int fd, struct cl_t *line, unsigned char *details, pid_t pid,
             ftime = localtime(&until);
             len +=
                 snprintf(buf + len, sizeof(buf) - len,
-                         " %04d-%02d-%02d %02d:%02d %s",
+                         " %04d-%02d-%02d %02d:%02d:%02d %s",
                          (ftime->tm_year + 1900), (ftime->tm_mon + 1),
                          ftime->tm_mday, ftime->tm_hour, ftime->tm_min,
+                         ftime->tm_sec,
                          (is_strict(line->cl_option)) ? "Y" : "N");
         }
         else
@@ -468,9 +469,9 @@ print_line(int fd, struct cl_t *line, unsigned char *details, pid_t pid,
     if (bit_test(details, FIELD_SCHEDULE)) {
         ftime = localtime(&(line->cl_nextexe));
         len +=
-            snprintf(buf + len, sizeof(buf) - len, "|%04d-%02d-%02d %02d:%02d",
+            snprintf(buf + len, sizeof(buf) - len, "|%04d-%02d-%02d %02d:%02d:%02d",
                      (ftime->tm_year + 1900), (ftime->tm_mon + 1),
-                     ftime->tm_mday, ftime->tm_hour, ftime->tm_min);
+                     ftime->tm_mday, ftime->tm_hour, ftime->tm_min, ftime->tm_sec);
     }
     len += snprintf(buf + len, sizeof(buf) - len, "|%s\n", line->cl_shell);
 
diff --git a/subs.c b/subs.c
index 1288f84..7ee6234 100644
--- a/subs.c
+++ b/subs.c
@@ -68,7 +68,7 @@ seteuid_safe(uid_t euid)
      * which is why we need to check if a change is needed */
 
     if (geteuid() != euid && seteuid(euid) != 0)
-        die_e("could not change euid to %d", euid);
+        error_e("could not change euid to %d", euid);
 
 }
 
@@ -81,7 +81,7 @@ setegid_safe(gid_t egid)
      * which is why we need to check if a change is needed */
 
     if (getegid() != egid && setegid(egid) != 0)
-        die_e("could not change egid to %d", egid);
+        error_e("could not change egid to %d", egid);
 
 }
 #endif                          /* def USE_SETE_ID */
