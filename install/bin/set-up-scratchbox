#!/usr/bin/perl
use strict;
use warnings;
use lib `dirname $0 | tr -d '\n'`;
use ScriptScript;

my $imgDir = "/media/stuff/Images/scratchbox";
my $armRS = "arm-public-sdk-rootstrap.tgz";
my $x86RS = "i386-public-sdk-rootstrap.tgz";

my $mirror = "http://mirror.thecust.net/harmattan-dev.nokia.com/";

my @pkgs = qw(
  scratchbox-core scratchbox-libs scratchbox-devkit-qemu
  scratchbox-devkit-debian-squeeze scratchbox-devkit-perl
  scratchbox-toolchain-host-gcc
  scratchbox-toolchain-cs2009q3-eglibc2.10-armv7-hard
  scratchbox-toolchain-cs2009q3-eglibc2.10-i486
  scratchbox-devkit-hashutils-squeeze-sdk
);

sub sboxRun(@);
sub replaceSources($);

sub main(@){
  getRoot @_;
  my $user = getUsername();

  runAptGet "-y", "--force-yes", "install", @pkgs;
  if(not -e "/scratchbox/login"){
    runAptGet "remove", @pkgs;
    run "dpkg", "-i", globFiles "$imgDir/debs/*.deb";
    #runAptGet "install", @pkgs;
  }

  tryrun "/scratchbox/sbin/sbox_adduser", $user, "yes";
  tryrun "groupadd", "sbox";
  tryrun "usermod", $user, "-a", "-G", "sbox";
  sboxRun qw(sb-conf st HARMATTAN_ARMEL
     -c cs2009q3-eglibc2.10-armv7-hard
     -d qemu:perl:debian-squeeze:hashutils-squeeze-sdk
     -t qemu-arm-sb
  );
  sboxRun qw(sb-conf st HARMATTAN_X86
    -c cs2009q3-eglibc2.10-i486
    -d perl:debian-squeeze:hashutils-squeeze-sdk
    -t none
  );

  my $chrootDir = "/home/$user/scratchbox";
  my $mntDir = "/scratchbox/users/$user/$chrootDir";
  tryrun "mkdir", "-p", $mntDir;
  tryrun "mount", "-o", "bind", $imgDir, $mntDir;

  die "Missing images\n" if not -e "$imgDir/$armRS" or not -e "$imgDir/$x86RS";
  if(not -d "/scratchbox/users/wolke/targets/HARMATTAN_ARMEL"){
    sboxRun qw(sb-conf select HARMATTAN_ARMEL);
    sboxRun "sb-conf", "rs", "$chrootDir/$armRS";
    sboxRun "sb-conf", "in", "-edFL";
  }

  if(not -d "/scratchbox/users/wolke/targets/HARMATTAN_X86"){
    sboxRun qw(sb-conf select HARMATTAN_X86);
    sboxRun "sb-conf", "rs", "$chrootDir/$x86RS";
    sboxRun "sb-conf", "in", "-edFL";
  }

  tryrun "umount", $mntDir;

  replaceSources "HARMATTAN_ARMEL";
  replaceSources "HARMATTAN_X86";

  sboxRun qw(sb-conf select HARMATTAN_ARMEL);
  sboxRun qw(apt-get update);
  sboxRun qw(apt-get install -y --force-yes build-essential cmake);
  sboxRun qw(apt-get install -y --force-yes cmake-data);
  sboxRun qw(apt-get install -y --force-yes cmake);

  sboxRun qw(sb-conf select HARMATTAN_X86);
  sboxRun qw(apt-get update);
  sboxRun qw(apt-get install -y --force-yes build-essential cmake);
  sboxRun qw(apt-get install -y --force-yes cmake-data);
  sboxRun qw(apt-get install -y --force-yes cmake);

  sboxRun qw(sb-conf select HARMATTAN_ARMEL);
}

sub sboxRun(@){
  tryrunUser "/scratchbox/login", "\"@_\"";
}

sub replaceSources($){
  my $target = shift;
  my $list = "/scratchbox/users/wolke/targets/$target/etc/apt/sources.list";
  if(not -e $list){
    die "Could not update $list\n";
  }
  open FH, "< $list" or die "Could not update $list\n";
  my @lines = <FH>;
  close FH;
  for my $line(@lines){
    $line =~ s/https?:\/\/.*harmattan-dev.nokia.com\/?/$mirror/;
  }
  open FH, "> $list" or die "Could not update $list\n";
  print FH @lines;
  close FH;
}

&main(@ARGV);
