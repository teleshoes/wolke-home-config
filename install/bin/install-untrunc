#!/usr/bin/perl
use strict;
use warnings;
use lib `dirname $0 | tr -d '\n'`;
use ScriptScript;

sub getMathopsPatch();

my $GIT_REPO = "https://github.com/anthwlock/untrunc";

my $UNTRUNC_EXEC_DEST = "/usr/local/bin/untrunc";

my $FFMPEG_VERSION = "3.3.9";
my $FFMPEG_TAR = "/media/stuff/Images/ffmpeg/ffmpeg-$FFMPEG_VERSION.tar.xz";

sub main(@) {
  die "Usage: $0\n" if @_ > 0;

  my $dir = getSrcCache() . "/untrunc";
  if(not -d $dir){
    run "git", "clone", $GIT_REPO, $dir;
  }

  #use recommended ffmpeg version
  if(not -d "$dir/ffmpeg-$FFMPEG_VERSION"){
    run "tar",
      "-x",
      "--one-top-level=$dir",
      "-f", $FFMPEG_TAR;

    #patch mathops.h for newer binutils
    my $mathopsFile = "$dir/ffmpeg-$FFMPEG_VERSION/libavcodec/x86/mathops.h";
    if(not -f $mathopsFile){
      die "ERROR: could not patch $mathopsFile\n";
    }

    my $patchFile = "/tmp/untrunc-patch-" . nowMillis();
    writeFile $patchFile, getMathopsPatch();
    run "patch", $mathopsFile, $patchFile;
    run "rm", $patchFile;
  }

  run "make", "-C", $dir, "FF_VER=$FFMPEG_VERSION", "-j", "all";
  runSudo "rm", "-f", $UNTRUNC_EXEC_DEST;
  runSudo "cp", "-a", "$dir/untrunc", $UNTRUNC_EXEC_DEST;
}

sub getMathopsPatch(){
return '37a38
>     if (__builtin_constant_p(shift))
42,43c43,51
<         :"a"(a), "rm"(b), "ci"((uint8_t)shift)
<     );
---
>         :"a"(a), "rm"(b), "i"(shift & 0x1F)
>     )
>     else
>         __asm__ (
>             "imull %3               \n\t"
>             "shrdl %4, %%edx, %%eax \n\t"
>             :"=a"(rt), "=d"(dummy)
>             :"a"(a), "rm"(b), "c"((uint8_t)shift)
>         );;
115a124
>     if (__builtin_constant_p(s))
118c127
<          : "ic" ((uint8_t)(-s))
---
>          : "i" (-s & 0x1F)
119a129,133
>     else
>         __asm__ ("sarl %1, %0\n\t"
>                : "+r" (a)
>                : "c" ((uint8_t)(-s))
>         );
124a139
>     if (__builtin_constant_p(s))
127c142
<          : "ic" ((uint8_t)(-s))
---
>          : "i" (-s & 0x1F)
128a144,148
>     else
>         __asm__ ("shrl %1, %0\n\t"
>                : "+r" (a)
>                : "c" ((uint8_t)(-s))
>         );
';
}

&main(@ARGV);
