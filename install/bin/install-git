#!/usr/bin/perl
use strict;
use warnings;
use lib `dirname $0 | tr -d '\n'`;
use ScriptScript;

my $minVersion = "1.8.1";

sub versionCmp($$);

sub main(@) {
    runAptGet qw(install git);
    my $v = `git --version`;
    chomp $v;
    if(versionCmp($minVersion, $v) > 0){
      print "skipping: $v >= $minVersion\n";
      exit 0;
    }

    runAptGet qw(-y build-dep git);
    my $srcdir = "$ENV{HOME}/.src-cache/git";

    my $conf = "$ENV{HOME}/.gitconfig";
    my $ignore = "$conf.ignore";
    run "mv", $conf, $ignore if -e $conf;
    if (-d $srcdir) {
        run "git", "-C", $srcdir, "pull";
    } else {
        run "git", "clone", "https://github.com/git/git.git", $srcdir;
    }
    run "mv", $ignore, $conf if -e $ignore;

    run "make", "-C", $srcdir, "-j", "all";
    run "sudo", "make", "-C", $srcdir, "install";
    tryrun qw(sudo rm /etc/bash_completion.d/git-prompt);
}

sub versionCmp($$){
  my ($v1, $v2) = @_;
  my @n1 = $v1 =~ /\d+/g;
  my @n2 = $v2 =~ /\d+/g;
  push @n1, 0 while @n1 < @n2;
  push @n2, 0 while @n1 > @n2;

  for(my $i=0; $i<@n1; $i++){
    return -1 if $n1[$i] > $n2[$i];
    return 1 if $n1[$i] < $n2[$i];
  }
  return 0;
}

&main(@ARGV);
